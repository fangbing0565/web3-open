// plugin handle, outputContentProcessPlugin return new output file
// https://ferry.bytedance.net/open/plugins/
class VersionHandler {
    constructor(option) {
      // 指定使用的钩子为 outputContentProcess
      this.hook = 'outputContentProcess';
      // 指定作用模块为'client'
      this.scopes = ['*'];
      // 获取实例化参数
      this.option = option || {};
    }
  
    // 处理输出文件内容
    run(param = {}) {
      const { content, path } = param;
      let output = content;
      const PROMPT = '/* FERRY AUTO-GENERATED: DO NOT EDIT THIS FILE */';
      // handle `*.d.ts` files
      if (path.indexOf('.d.ts') > 0) {
        // make `version` optional in '.d.ts'
        output = output.replace(/version: (string|number)/g, 'version?: number');
      }
      // handle `*.js` files
      if (path.indexOf('.js') > 0) {
        // add default value for version in '.js'
        output = output.replace(/(\$\{)(request.version)(\})/g, '$1$2 || 1$3');
      }
      return `${PROMPT}\n${output}`;
    }
  }
  
  module.exports = {
    idlFetchs: [
      {
        outDir: 'idl',
        type: 'git',
        source: 'git@code.byted.org:oec/http_idl.git',
        entry: './**/**.proto',
        branch: 'master',
        rootDir: 'pb_idl',
      },
    ],
    ignore: {
      include: [/api\.proto$/],
      fieldName: [/^nps_survey_type$/],
    },
    customHttpRequest: {
      api: 'fetch',
      importCode: "import { fetch } from '@oec-open/ttspc-kits';",
      useFunctionGeneric: true,
      skipDataSerialization: true, // lib library i18nFetch had handled stringify
    },
    plugins: [new VersionHandler()],
  };
  